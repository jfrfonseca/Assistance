#!/usr/bin/env python
import sqlite3
import ast
import os


BASEDIR = "Results"
# Each below is like [ROUND-ROBIN_SERVERS, FIFO_SERVERS, CLIENTS]
# EXP_CONF = ["041", "131", "221", "311", "401"]
EXP_CONF = ["041"]
NUM_RUNS = 1

TICKET = 1
TIME_RECEIVED = 3
APP_ID = 4
ARGS = 5
DATA_FILES = 6
FINISH_TIME = 9
STDOUT = 11
STDERR = 12
USAGE = 16
GATHERING = 17
DATA_READY = 18
SENDING_DATA = 23


def parseServerNameType(folderName):
	namePieces = folderName.split("-")
	return namePieces[1], (namePieces[3].split("_"))[1]


def appTouple2string(logChunk):
	answer = logChunk[APP_ID]+":::"+logChunk[ARGS]
	filesList = ast.literal_eval(logChunk[DATA_FILES])
	for fileName in filesList:
		answer += ":::"+fileName.split('/')[-1]
	return answer


def splitLog(fullLog):
	ans = []
	rawChunks = fullLog.split("<END>")[:-1]
	for rawPiece in rawChunks:
		piece = rawPiece.split("<BEGIN>")[1]
		pieceLines = piece.splitlines()
		ans.append(pieceLines)
	return ans


if __name__ == '__main__':
	#db = sqlite3.connect(':memory:')
	#c = conn.cursor()
	# Create table
	#c.execute('''CREATE TABLE results
#(configuration text, run text, serverIP text, serverScheduling text, appTouple text, response real, transfer real, execution real)''')
	for expConf in EXP_CONF:
		for runNumber in range(1, NUM_RUNS+1):
	 		for serverFolder in (next(os.walk(
										BASEDIR+'/'
										+expConf+'/'
										+"Run"+str(runNumber)))[1]):
				serverIP, serverType = parseServerNameType(serverFolder)
				serverData = "'"+expConf+"', "\
								+"'Run"+str(runNumber)+"', "\
								+"'"+serverIP+"', "\
								+"'"+serverType+"', "
				with open(BASEDIR+'/'
						+expConf+'/'
						+"Run"+str(runNumber)+'/'
						+serverFolder+'/'
						+"LOG/officerLogFile.log", 'r') as logFile:
					for logChunck in splitLog(logFile.read()):
						logData = "'"+appTouple2string(logChunck)+"', "
						print serverData+logData
						#c.execute("INSERT INTO results VALUES ("+serverData+logData")")
				#conn.commit()
	#conn.close()
