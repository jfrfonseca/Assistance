# 
# __ASSISTANCE MISSION CONTROL LAUNCHER__ 0.5.030315
# 
# Copyright (c) 2015, Jose F. Fonseca <jose.f.fonseca@ieee.org>
# 
# SEE THE ATTACHED LICENSE FILE FOR IMPORTANT LEGAL INFORMATIONS
#  
# Launches 
# - This version requires a web browser, mostly because nodeJS does not support WebRTC - yet.
# - This version requires Google Chrome as the web browser, due its dependence on webkit. working on it.


# ==============================================
# ~~~~~~~~~~~~~~~~~~ System Imports ~~~~~~~~~~~~~~~~~~
# ==============================================
import subprocess, time, socket


# =============================================
# ~~~~~~~~~~~~~~~~~~ Local Imports ~~~~~~~~~~~~~~~~~~
# =============================================


# ===========================================
# ~~~~~~~~~~~~~~~~~~ Constants ~~~~~~~~~~~~~~~~~~
# ===========================================
#general
defaultDelay = 0.05

# Transceiver
assistanceRootFolderLoc = "../../../"           # Root folder of the Assistance System
transceiverScriptLoc = assistanceRootFolderLoc+"transceiver/implementation/tests/all/echoServer.py"       # Assistance Transceiver Launcher Script
transceiverScriptArgs = ["python", transceiverScriptLoc]
transceiverListenningPorts = [23019, 23193, 47913]
transceiverEchoTestString = "MissionControl_>_Transceiver---"+str(int(time.time()))+"::: Echo Test String, No Authentication!"


# ==========================================
# ~~~~~~~~~~~~~~~~~~ Variables ~~~~~~~~~~~~~~~~~~
# ==========================================


# =========================================
# ~~~~~~~~~~~~~~~~~~ Buffers ~~~~~~~~~~~~~~~~~~
# =========================================


# ==============================================
# ~~~~~~~~~~~~~~~~~~ Control Objects ~~~~~~~~~~~~~~~~~~
# ==============================================
# general
global droneSocket

# transceiver
global transceiverObject


# ===================
# ------------------ Classes ------------------
# ===================


# =====================
# ------------------ Functions ------------------
# =====================
def testTransceiverSetup(portNumbers):
    host = 'localhost'
    size = 10000
    for port in portNumbers:
        time.sleep(defaultDelay)
        droneSocket.connect((host,port))
        time.sleep(defaultDelay)
        droneSocket.send(transceiverEchoTestString)
        time.sleep(defaultDelay)
        answer = droneSocket.recv(size)
        if answer != transceiverEchoTestString:
            raise Exception("Transceiver Setup Error! Port: "+port+";\n\tMessage Expected: "+transceiverEchoTestString+";\n\tMessage Received: "+answer)
    print "Transceiver Setup Complete"


# =========================================
# ++++++++++++++++++ Setup ++++++++++++++++++
# =========================================
# Initiate the drone control socket
print "initiating the drone control socket"
droneSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
time.sleep(1)
# initiate the transceiver service
transceiverObject  = subprocess.Popen(transceiverScriptArgs)
print "iniciating the Transceiver Process"
time.sleep(1)
testTransceiverSetup(transceiverListenningPorts)

# ============================================
# ++++++++++++++++++ Teardown ++++++++++++++++++
# ============================================

 
 
 
 

